<?php
/**
 * ProductApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * my-yoast
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use \Yoast\MyYoastApiClient\Configuration;
use \Yoast\MyYoastApiClient\ApiException;
use \Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * ProductApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProductApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for productCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testProductCount()
    {
    }

    /**
     * Test case for productCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testProductCreate()
    {
    }

    /**
     * Test case for productCreateChangeStreamGetProductsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testProductCreateChangeStreamGetProductsChangeStream()
    {
    }

    /**
     * Test case for productCreateChangeStreamPostProductsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testProductCreateChangeStreamPostProductsChangeStream()
    {
    }

    /**
     * Test case for productDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testProductDeleteById()
    {
    }

    /**
     * Test case for productExistsGetProductsidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testProductExistsGetProductsidExists()
    {
    }

    /**
     * Test case for productExistsHeadProductsid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testProductExistsHeadProductsid()
    {
    }

    /**
     * Test case for productFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testProductFind()
    {
    }

    /**
     * Test case for productFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testProductFindById()
    {
    }

    /**
     * Test case for productFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testProductFindOne()
    {
    }

    /**
     * Test case for productFromWooCommerce
     *
     * .
     *
     */
    public function testProductFromWooCommerce()
    {
    }

    /**
     * Test case for productPatchOrCreate
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductPatchOrCreate()
    {
    }

    /**
     * Test case for productPrototypeCountLineItems
     *
     * Counts lineItems of Product..
     *
     */
    public function testProductPrototypeCountLineItems()
    {
    }

    /**
     * Test case for productPrototypeCountSubscriptions
     *
     * Counts subscriptions of Product..
     *
     */
    public function testProductPrototypeCountSubscriptions()
    {
    }

    /**
     * Test case for productPrototypeCreateLineItems
     *
     * Creates a new instance in lineItems of this model..
     *
     */
    public function testProductPrototypeCreateLineItems()
    {
    }

    /**
     * Test case for productPrototypeCreateSubscriptions
     *
     * Creates a new instance in subscriptions of this model..
     *
     */
    public function testProductPrototypeCreateSubscriptions()
    {
    }

    /**
     * Test case for productPrototypeDeleteLineItems
     *
     * Deletes all lineItems of this model..
     *
     */
    public function testProductPrototypeDeleteLineItems()
    {
    }

    /**
     * Test case for productPrototypeDeleteSubscriptions
     *
     * Deletes all subscriptions of this model..
     *
     */
    public function testProductPrototypeDeleteSubscriptions()
    {
    }

    /**
     * Test case for productPrototypeDestroyByIdLineItems
     *
     * Delete a related item by id for lineItems..
     *
     */
    public function testProductPrototypeDestroyByIdLineItems()
    {
    }

    /**
     * Test case for productPrototypeDestroyByIdSubscriptions
     *
     * Delete a related item by id for subscriptions..
     *
     */
    public function testProductPrototypeDestroyByIdSubscriptions()
    {
    }

    /**
     * Test case for productPrototypeFindByIdLineItems
     *
     * Find a related item by id for lineItems..
     *
     */
    public function testProductPrototypeFindByIdLineItems()
    {
    }

    /**
     * Test case for productPrototypeFindByIdSubscriptions
     *
     * Find a related item by id for subscriptions..
     *
     */
    public function testProductPrototypeFindByIdSubscriptions()
    {
    }

    /**
     * Test case for productPrototypeGetCourses
     *
     * Fetches belongsTo relation courses..
     *
     */
    public function testProductPrototypeGetCourses()
    {
    }

    /**
     * Test case for productPrototypeGetLineItems
     *
     * Queries lineItems of Product..
     *
     */
    public function testProductPrototypeGetLineItems()
    {
    }

    /**
     * Test case for productPrototypeGetSubscriptions
     *
     * Queries subscriptions of Product..
     *
     */
    public function testProductPrototypeGetSubscriptions()
    {
    }

    /**
     * Test case for productPrototypePatchAttributes
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductPrototypePatchAttributes()
    {
    }

    /**
     * Test case for productPrototypeUpdateByIdLineItems
     *
     * Update a related item by id for lineItems..
     *
     */
    public function testProductPrototypeUpdateByIdLineItems()
    {
    }

    /**
     * Test case for productPrototypeUpdateByIdSubscriptions
     *
     * Update a related item by id for subscriptions..
     *
     */
    public function testProductPrototypeUpdateByIdSubscriptions()
    {
    }

    /**
     * Test case for productReplaceByIdPostProductsidReplace
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductReplaceByIdPostProductsidReplace()
    {
    }

    /**
     * Test case for productReplaceByIdPutProductsid
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testProductReplaceByIdPutProductsid()
    {
    }

    /**
     * Test case for productReplaceOrCreatePostProductsReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductReplaceOrCreatePostProductsReplaceOrCreate()
    {
    }

    /**
     * Test case for productReplaceOrCreatePutProducts
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testProductReplaceOrCreatePutProducts()
    {
    }

    /**
     * Test case for productUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testProductUpdateAll()
    {
    }

    /**
     * Test case for productUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testProductUpsertWithWhere()
    {
    }
}
