<?php
/**
 * OrderApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * my-yoast
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use \Yoast\MyYoastApiClient\Configuration;
use \Yoast\MyYoastApiClient\ApiClient;
use \Yoast\MyYoastApiClient\ApiException;
use \Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * OrderApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OrderApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for orderCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testOrderCount()
    {
    }

    /**
     * Test case for orderCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testOrderCreate()
    {
    }

    /**
     * Test case for orderCreateChangeStreamGetOrdersChangeStream
     *
     * Create a change stream..
     *
     */
    public function testOrderCreateChangeStreamGetOrdersChangeStream()
    {
    }

    /**
     * Test case for orderCreateChangeStreamPostOrdersChangeStream
     *
     * Create a change stream..
     *
     */
    public function testOrderCreateChangeStreamPostOrdersChangeStream()
    {
    }

    /**
     * Test case for orderDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testOrderDeleteById()
    {
    }

    /**
     * Test case for orderExistsGetOrdersidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testOrderExistsGetOrdersidExists()
    {
    }

    /**
     * Test case for orderExistsHeadOrdersid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testOrderExistsHeadOrdersid()
    {
    }

    /**
     * Test case for orderFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testOrderFind()
    {
    }

    /**
     * Test case for orderFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testOrderFindById()
    {
    }

    /**
     * Test case for orderFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testOrderFindOne()
    {
    }

    /**
     * Test case for orderFromWooCommerce
     *
     * .
     *
     */
    public function testOrderFromWooCommerce()
    {
    }

    /**
     * Test case for orderInvoice
     *
     * .
     *
     */
    public function testOrderInvoice()
    {
    }

    /**
     * Test case for orderPatchOrCreate
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testOrderPatchOrCreate()
    {
    }

    /**
     * Test case for orderPrototypeCountDiscounts
     *
     * Counts discounts of Order..
     *
     */
    public function testOrderPrototypeCountDiscounts()
    {
    }

    /**
     * Test case for orderPrototypeCountItems
     *
     * Counts items of Order..
     *
     */
    public function testOrderPrototypeCountItems()
    {
    }

    /**
     * Test case for orderPrototypeCountSubscriptions
     *
     * Counts subscriptions of Order..
     *
     */
    public function testOrderPrototypeCountSubscriptions()
    {
    }

    /**
     * Test case for orderPrototypeCountTransactions
     *
     * Counts transactions of Order..
     *
     */
    public function testOrderPrototypeCountTransactions()
    {
    }

    /**
     * Test case for orderPrototypeCountVats
     *
     * Counts vats of Order..
     *
     */
    public function testOrderPrototypeCountVats()
    {
    }

    /**
     * Test case for orderPrototypeCreateDiscounts
     *
     * Creates a new instance in discounts of this model..
     *
     */
    public function testOrderPrototypeCreateDiscounts()
    {
    }

    /**
     * Test case for orderPrototypeCreateItems
     *
     * Creates a new instance in items of this model..
     *
     */
    public function testOrderPrototypeCreateItems()
    {
    }

    /**
     * Test case for orderPrototypeCreateSubscriptions
     *
     * Creates a new instance in subscriptions of this model..
     *
     */
    public function testOrderPrototypeCreateSubscriptions()
    {
    }

    /**
     * Test case for orderPrototypeCreateTransactions
     *
     * Creates a new instance in transactions of this model..
     *
     */
    public function testOrderPrototypeCreateTransactions()
    {
    }

    /**
     * Test case for orderPrototypeCreateVats
     *
     * Creates a new instance in vats of this model..
     *
     */
    public function testOrderPrototypeCreateVats()
    {
    }

    /**
     * Test case for orderPrototypeDeleteDiscounts
     *
     * Deletes all discounts of this model..
     *
     */
    public function testOrderPrototypeDeleteDiscounts()
    {
    }

    /**
     * Test case for orderPrototypeDeleteItems
     *
     * Deletes all items of this model..
     *
     */
    public function testOrderPrototypeDeleteItems()
    {
    }

    /**
     * Test case for orderPrototypeDeleteSubscriptions
     *
     * Deletes all subscriptions of this model..
     *
     */
    public function testOrderPrototypeDeleteSubscriptions()
    {
    }

    /**
     * Test case for orderPrototypeDeleteTransactions
     *
     * Deletes all transactions of this model..
     *
     */
    public function testOrderPrototypeDeleteTransactions()
    {
    }

    /**
     * Test case for orderPrototypeDeleteVats
     *
     * Deletes all vats of this model..
     *
     */
    public function testOrderPrototypeDeleteVats()
    {
    }

    /**
     * Test case for orderPrototypeDestroyByIdDiscounts
     *
     * Delete a related item by id for discounts..
     *
     */
    public function testOrderPrototypeDestroyByIdDiscounts()
    {
    }

    /**
     * Test case for orderPrototypeDestroyByIdItems
     *
     * Delete a related item by id for items..
     *
     */
    public function testOrderPrototypeDestroyByIdItems()
    {
    }

    /**
     * Test case for orderPrototypeDestroyByIdSubscriptions
     *
     * Delete a related item by id for subscriptions..
     *
     */
    public function testOrderPrototypeDestroyByIdSubscriptions()
    {
    }

    /**
     * Test case for orderPrototypeDestroyByIdTransactions
     *
     * Delete a related item by id for transactions..
     *
     */
    public function testOrderPrototypeDestroyByIdTransactions()
    {
    }

    /**
     * Test case for orderPrototypeDestroyByIdVats
     *
     * Delete a related item by id for vats..
     *
     */
    public function testOrderPrototypeDestroyByIdVats()
    {
    }

    /**
     * Test case for orderPrototypeExistsSubscriptions
     *
     * Check the existence of subscriptions relation to an item by id..
     *
     */
    public function testOrderPrototypeExistsSubscriptions()
    {
    }

    /**
     * Test case for orderPrototypeFindByIdDiscounts
     *
     * Find a related item by id for discounts..
     *
     */
    public function testOrderPrototypeFindByIdDiscounts()
    {
    }

    /**
     * Test case for orderPrototypeFindByIdItems
     *
     * Find a related item by id for items..
     *
     */
    public function testOrderPrototypeFindByIdItems()
    {
    }

    /**
     * Test case for orderPrototypeFindByIdSubscriptions
     *
     * Find a related item by id for subscriptions..
     *
     */
    public function testOrderPrototypeFindByIdSubscriptions()
    {
    }

    /**
     * Test case for orderPrototypeFindByIdTransactions
     *
     * Find a related item by id for transactions..
     *
     */
    public function testOrderPrototypeFindByIdTransactions()
    {
    }

    /**
     * Test case for orderPrototypeFindByIdVats
     *
     * Find a related item by id for vats..
     *
     */
    public function testOrderPrototypeFindByIdVats()
    {
    }

    /**
     * Test case for orderPrototypeGetCustomer
     *
     * Fetches belongsTo relation customer..
     *
     */
    public function testOrderPrototypeGetCustomer()
    {
    }

    /**
     * Test case for orderPrototypeGetDiscounts
     *
     * Queries discounts of Order..
     *
     */
    public function testOrderPrototypeGetDiscounts()
    {
    }

    /**
     * Test case for orderPrototypeGetItems
     *
     * Queries items of Order..
     *
     */
    public function testOrderPrototypeGetItems()
    {
    }

    /**
     * Test case for orderPrototypeGetSubscriptions
     *
     * Queries subscriptions of Order..
     *
     */
    public function testOrderPrototypeGetSubscriptions()
    {
    }

    /**
     * Test case for orderPrototypeGetTransactions
     *
     * Queries transactions of Order..
     *
     */
    public function testOrderPrototypeGetTransactions()
    {
    }

    /**
     * Test case for orderPrototypeGetVats
     *
     * Queries vats of Order..
     *
     */
    public function testOrderPrototypeGetVats()
    {
    }

    /**
     * Test case for orderPrototypeLinkSubscriptions
     *
     * Add a related item by id for subscriptions..
     *
     */
    public function testOrderPrototypeLinkSubscriptions()
    {
    }

    /**
     * Test case for orderPrototypePatchAttributes
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testOrderPrototypePatchAttributes()
    {
    }

    /**
     * Test case for orderPrototypeUnlinkSubscriptions
     *
     * Remove the subscriptions relation to an item by id..
     *
     */
    public function testOrderPrototypeUnlinkSubscriptions()
    {
    }

    /**
     * Test case for orderPrototypeUpdateByIdDiscounts
     *
     * Update a related item by id for discounts..
     *
     */
    public function testOrderPrototypeUpdateByIdDiscounts()
    {
    }

    /**
     * Test case for orderPrototypeUpdateByIdItems
     *
     * Update a related item by id for items..
     *
     */
    public function testOrderPrototypeUpdateByIdItems()
    {
    }

    /**
     * Test case for orderPrototypeUpdateByIdSubscriptions
     *
     * Update a related item by id for subscriptions..
     *
     */
    public function testOrderPrototypeUpdateByIdSubscriptions()
    {
    }

    /**
     * Test case for orderPrototypeUpdateByIdTransactions
     *
     * Update a related item by id for transactions..
     *
     */
    public function testOrderPrototypeUpdateByIdTransactions()
    {
    }

    /**
     * Test case for orderPrototypeUpdateByIdVats
     *
     * Update a related item by id for vats..
     *
     */
    public function testOrderPrototypeUpdateByIdVats()
    {
    }

    /**
     * Test case for orderReplaceByIdPostOrdersidReplace
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testOrderReplaceByIdPostOrdersidReplace()
    {
    }

    /**
     * Test case for orderReplaceByIdPutOrdersid
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testOrderReplaceByIdPutOrdersid()
    {
    }

    /**
     * Test case for orderReplaceOrCreatePostOrdersReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testOrderReplaceOrCreatePostOrdersReplaceOrCreate()
    {
    }

    /**
     * Test case for orderReplaceOrCreatePutOrders
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testOrderReplaceOrCreatePutOrders()
    {
    }

    /**
     * Test case for orderUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testOrderUpdateAll()
    {
    }

    /**
     * Test case for orderUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testOrderUpsertWithWhere()
    {
    }
}
