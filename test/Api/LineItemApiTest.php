<?php
/**
 * LineItemApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * my-yoast
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use \Yoast\MyYoastApiClient\Configuration;
use \Yoast\MyYoastApiClient\ApiClient;
use \Yoast\MyYoastApiClient\ApiException;
use \Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * LineItemApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LineItemApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for lineItemCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testLineItemCount()
    {
    }

    /**
     * Test case for lineItemCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testLineItemCreate()
    {
    }

    /**
     * Test case for lineItemCreateChangeStreamGetLineItemsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testLineItemCreateChangeStreamGetLineItemsChangeStream()
    {
    }

    /**
     * Test case for lineItemCreateChangeStreamPostLineItemsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testLineItemCreateChangeStreamPostLineItemsChangeStream()
    {
    }

    /**
     * Test case for lineItemDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testLineItemDeleteById()
    {
    }

    /**
     * Test case for lineItemExistsGetLineItemsidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testLineItemExistsGetLineItemsidExists()
    {
    }

    /**
     * Test case for lineItemExistsHeadLineItemsid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testLineItemExistsHeadLineItemsid()
    {
    }

    /**
     * Test case for lineItemFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testLineItemFind()
    {
    }

    /**
     * Test case for lineItemFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testLineItemFindById()
    {
    }

    /**
     * Test case for lineItemFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testLineItemFindOne()
    {
    }

    /**
     * Test case for lineItemPatchOrCreate
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testLineItemPatchOrCreate()
    {
    }

    /**
     * Test case for lineItemPrototypeCountRefunds
     *
     * Counts refunds of LineItem..
     *
     */
    public function testLineItemPrototypeCountRefunds()
    {
    }

    /**
     * Test case for lineItemPrototypeCreateRefunds
     *
     * Creates a new instance in refunds of this model..
     *
     */
    public function testLineItemPrototypeCreateRefunds()
    {
    }

    /**
     * Test case for lineItemPrototypeDeleteRefunds
     *
     * Deletes all refunds of this model..
     *
     */
    public function testLineItemPrototypeDeleteRefunds()
    {
    }

    /**
     * Test case for lineItemPrototypeDestroyByIdRefunds
     *
     * Delete a related item by id for refunds..
     *
     */
    public function testLineItemPrototypeDestroyByIdRefunds()
    {
    }

    /**
     * Test case for lineItemPrototypeExistsRefunds
     *
     * Check the existence of refunds relation to an item by id..
     *
     */
    public function testLineItemPrototypeExistsRefunds()
    {
    }

    /**
     * Test case for lineItemPrototypeFindByIdRefunds
     *
     * Find a related item by id for refunds..
     *
     */
    public function testLineItemPrototypeFindByIdRefunds()
    {
    }

    /**
     * Test case for lineItemPrototypeGetOrder
     *
     * Fetches belongsTo relation order..
     *
     */
    public function testLineItemPrototypeGetOrder()
    {
    }

    /**
     * Test case for lineItemPrototypeGetProduct
     *
     * Fetches belongsTo relation product..
     *
     */
    public function testLineItemPrototypeGetProduct()
    {
    }

    /**
     * Test case for lineItemPrototypeGetRefunds
     *
     * Queries refunds of LineItem..
     *
     */
    public function testLineItemPrototypeGetRefunds()
    {
    }

    /**
     * Test case for lineItemPrototypeLinkRefunds
     *
     * Add a related item by id for refunds..
     *
     */
    public function testLineItemPrototypeLinkRefunds()
    {
    }

    /**
     * Test case for lineItemPrototypePatchAttributes
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testLineItemPrototypePatchAttributes()
    {
    }

    /**
     * Test case for lineItemPrototypeUnlinkRefunds
     *
     * Remove the refunds relation to an item by id..
     *
     */
    public function testLineItemPrototypeUnlinkRefunds()
    {
    }

    /**
     * Test case for lineItemPrototypeUpdateByIdRefunds
     *
     * Update a related item by id for refunds..
     *
     */
    public function testLineItemPrototypeUpdateByIdRefunds()
    {
    }

    /**
     * Test case for lineItemReplaceByIdPostLineItemsidReplace
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testLineItemReplaceByIdPostLineItemsidReplace()
    {
    }

    /**
     * Test case for lineItemReplaceByIdPutLineItemsid
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testLineItemReplaceByIdPutLineItemsid()
    {
    }

    /**
     * Test case for lineItemReplaceOrCreatePostLineItemsReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testLineItemReplaceOrCreatePostLineItemsReplaceOrCreate()
    {
    }

    /**
     * Test case for lineItemReplaceOrCreatePutLineItems
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testLineItemReplaceOrCreatePutLineItems()
    {
    }

    /**
     * Test case for lineItemUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testLineItemUpdateAll()
    {
    }

    /**
     * Test case for lineItemUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testLineItemUpsertWithWhere()
    {
    }
}
