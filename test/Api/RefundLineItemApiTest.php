<?php
/**
 * RefundLineItemApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * my-yoast
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use \Yoast\MyYoastApiClient\Configuration;
use \Yoast\MyYoastApiClient\ApiClient;
use \Yoast\MyYoastApiClient\ApiException;
use \Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * RefundLineItemApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RefundLineItemApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for refundLineItemCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testRefundLineItemCount()
    {
    }

    /**
     * Test case for refundLineItemCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testRefundLineItemCreate()
    {
    }

    /**
     * Test case for refundLineItemCreateChangeStreamGetRefundLineItemsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testRefundLineItemCreateChangeStreamGetRefundLineItemsChangeStream()
    {
    }

    /**
     * Test case for refundLineItemCreateChangeStreamPostRefundLineItemsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testRefundLineItemCreateChangeStreamPostRefundLineItemsChangeStream()
    {
    }

    /**
     * Test case for refundLineItemDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testRefundLineItemDeleteById()
    {
    }

    /**
     * Test case for refundLineItemExistsGetRefundLineItemsidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testRefundLineItemExistsGetRefundLineItemsidExists()
    {
    }

    /**
     * Test case for refundLineItemExistsHeadRefundLineItemsid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testRefundLineItemExistsHeadRefundLineItemsid()
    {
    }

    /**
     * Test case for refundLineItemFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testRefundLineItemFind()
    {
    }

    /**
     * Test case for refundLineItemFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testRefundLineItemFindById()
    {
    }

    /**
     * Test case for refundLineItemFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testRefundLineItemFindOne()
    {
    }

    /**
     * Test case for refundLineItemPatchOrCreate
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testRefundLineItemPatchOrCreate()
    {
    }

    /**
     * Test case for refundLineItemPrototypeGetLineItem
     *
     * Fetches belongsTo relation lineItem..
     *
     */
    public function testRefundLineItemPrototypeGetLineItem()
    {
    }

    /**
     * Test case for refundLineItemPrototypeGetRefund
     *
     * Fetches belongsTo relation refund..
     *
     */
    public function testRefundLineItemPrototypeGetRefund()
    {
    }

    /**
     * Test case for refundLineItemPrototypePatchAttributes
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testRefundLineItemPrototypePatchAttributes()
    {
    }

    /**
     * Test case for refundLineItemReplaceByIdPostRefundLineItemsidReplace
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testRefundLineItemReplaceByIdPostRefundLineItemsidReplace()
    {
    }

    /**
     * Test case for refundLineItemReplaceByIdPutRefundLineItemsid
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testRefundLineItemReplaceByIdPutRefundLineItemsid()
    {
    }

    /**
     * Test case for refundLineItemReplaceOrCreatePostRefundLineItemsReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testRefundLineItemReplaceOrCreatePostRefundLineItemsReplaceOrCreate()
    {
    }

    /**
     * Test case for refundLineItemReplaceOrCreatePutRefundLineItems
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testRefundLineItemReplaceOrCreatePutRefundLineItems()
    {
    }

    /**
     * Test case for refundLineItemUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testRefundLineItemUpdateAll()
    {
    }

    /**
     * Test case for refundLineItemUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testRefundLineItemUpsertWithWhere()
    {
    }
}
