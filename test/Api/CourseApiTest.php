<?php
/**
 * CourseApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * my-yoast
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use \Yoast\MyYoastApiClient\Configuration;
use \Yoast\MyYoastApiClient\ApiClient;
use \Yoast\MyYoastApiClient\ApiException;
use \Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * CourseApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CourseApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for courseCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testCourseCount()
    {
    }

    /**
     * Test case for courseCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testCourseCreate()
    {
    }

    /**
     * Test case for courseCreateChangeStreamGetCoursesChangeStream
     *
     * Create a change stream..
     *
     */
    public function testCourseCreateChangeStreamGetCoursesChangeStream()
    {
    }

    /**
     * Test case for courseCreateChangeStreamPostCoursesChangeStream
     *
     * Create a change stream..
     *
     */
    public function testCourseCreateChangeStreamPostCoursesChangeStream()
    {
    }

    /**
     * Test case for courseDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testCourseDeleteById()
    {
    }

    /**
     * Test case for courseExistsGetCoursesidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCourseExistsGetCoursesidExists()
    {
    }

    /**
     * Test case for courseExistsHeadCoursesid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCourseExistsHeadCoursesid()
    {
    }

    /**
     * Test case for courseFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testCourseFind()
    {
    }

    /**
     * Test case for courseFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testCourseFindById()
    {
    }

    /**
     * Test case for courseFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testCourseFindOne()
    {
    }

    /**
     * Test case for courseFromAcademy
     *
     * .
     *
     */
    public function testCourseFromAcademy()
    {
    }

    /**
     * Test case for coursePatchOrCreate
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testCoursePatchOrCreate()
    {
    }

    /**
     * Test case for coursePrototypeCountProductGroups
     *
     * Counts productGroups of Course..
     *
     */
    public function testCoursePrototypeCountProductGroups()
    {
    }

    /**
     * Test case for coursePrototypeCountProducts
     *
     * Counts products of Course..
     *
     */
    public function testCoursePrototypeCountProducts()
    {
    }

    /**
     * Test case for coursePrototypeCreateProductGroups
     *
     * Creates a new instance in productGroups of this model..
     *
     */
    public function testCoursePrototypeCreateProductGroups()
    {
    }

    /**
     * Test case for coursePrototypeCreateProducts
     *
     * Creates a new instance in products of this model..
     *
     */
    public function testCoursePrototypeCreateProducts()
    {
    }

    /**
     * Test case for coursePrototypeDeleteProductGroups
     *
     * Deletes all productGroups of this model..
     *
     */
    public function testCoursePrototypeDeleteProductGroups()
    {
    }

    /**
     * Test case for coursePrototypeDeleteProducts
     *
     * Deletes all products of this model..
     *
     */
    public function testCoursePrototypeDeleteProducts()
    {
    }

    /**
     * Test case for coursePrototypeDestroyByIdProductGroups
     *
     * Delete a related item by id for productGroups..
     *
     */
    public function testCoursePrototypeDestroyByIdProductGroups()
    {
    }

    /**
     * Test case for coursePrototypeDestroyByIdProducts
     *
     * Delete a related item by id for products..
     *
     */
    public function testCoursePrototypeDestroyByIdProducts()
    {
    }

    /**
     * Test case for coursePrototypeFindByIdProductGroups
     *
     * Find a related item by id for productGroups..
     *
     */
    public function testCoursePrototypeFindByIdProductGroups()
    {
    }

    /**
     * Test case for coursePrototypeFindByIdProducts
     *
     * Find a related item by id for products..
     *
     */
    public function testCoursePrototypeFindByIdProducts()
    {
    }

    /**
     * Test case for coursePrototypeGetProductGroups
     *
     * Queries productGroups of Course..
     *
     */
    public function testCoursePrototypeGetProductGroups()
    {
    }

    /**
     * Test case for coursePrototypeGetProducts
     *
     * Queries products of Course..
     *
     */
    public function testCoursePrototypeGetProducts()
    {
    }

    /**
     * Test case for coursePrototypePatchAttributes
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testCoursePrototypePatchAttributes()
    {
    }

    /**
     * Test case for coursePrototypeUpdateByIdProductGroups
     *
     * Update a related item by id for productGroups..
     *
     */
    public function testCoursePrototypeUpdateByIdProductGroups()
    {
    }

    /**
     * Test case for coursePrototypeUpdateByIdProducts
     *
     * Update a related item by id for products..
     *
     */
    public function testCoursePrototypeUpdateByIdProducts()
    {
    }

    /**
     * Test case for courseReplaceByIdPostCoursesidReplace
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testCourseReplaceByIdPostCoursesidReplace()
    {
    }

    /**
     * Test case for courseReplaceByIdPutCoursesid
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testCourseReplaceByIdPutCoursesid()
    {
    }

    /**
     * Test case for courseReplaceOrCreatePostCoursesReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testCourseReplaceOrCreatePostCoursesReplaceOrCreate()
    {
    }

    /**
     * Test case for courseReplaceOrCreatePutCourses
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testCourseReplaceOrCreatePutCourses()
    {
    }

    /**
     * Test case for courseUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testCourseUpdateAll()
    {
    }

    /**
     * Test case for courseUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testCourseUpsertWithWhere()
    {
    }
}
