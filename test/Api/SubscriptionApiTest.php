<?php
/**
 * SubscriptionApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * my-yoast
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use \Yoast\MyYoastApiClient\Configuration;
use \Yoast\MyYoastApiClient\ApiClient;
use \Yoast\MyYoastApiClient\ApiException;
use \Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * SubscriptionApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SubscriptionApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for subscriptionCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testSubscriptionCount()
    {

    }

    /**
     * Test case for subscriptionCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testSubscriptionCreate()
    {

    }

    /**
     * Test case for subscriptionCreateChangeStreamGetSubscriptionsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testSubscriptionCreateChangeStreamGetSubscriptionsChangeStream()
    {

    }

    /**
     * Test case for subscriptionCreateChangeStreamPostSubscriptionsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testSubscriptionCreateChangeStreamPostSubscriptionsChangeStream()
    {

    }

    /**
     * Test case for subscriptionDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testSubscriptionDeleteById()
    {

    }

    /**
     * Test case for subscriptionExistsGetSubscriptionsidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testSubscriptionExistsGetSubscriptionsidExists()
    {

    }

    /**
     * Test case for subscriptionExistsHeadSubscriptionsid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testSubscriptionExistsHeadSubscriptionsid()
    {

    }

    /**
     * Test case for subscriptionFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testSubscriptionFind()
    {

    }

    /**
     * Test case for subscriptionFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testSubscriptionFindById()
    {

    }

    /**
     * Test case for subscriptionFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testSubscriptionFindOne()
    {

    }

    /**
     * Test case for subscriptionFromWooCommerce
     *
     * .
     *
     */
    public function testSubscriptionFromWooCommerce()
    {

    }

    /**
     * Test case for subscriptionPatchOrCreate
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testSubscriptionPatchOrCreate()
    {

    }

    /**
     * Test case for subscriptionPrototypeCountOrders
     *
     * Counts orders of Subscription..
     *
     */
    public function testSubscriptionPrototypeCountOrders()
    {

    }

    /**
     * Test case for subscriptionPrototypeCountSites
     *
     * Counts sites of Subscription..
     *
     */
    public function testSubscriptionPrototypeCountSites()
    {

    }

    /**
     * Test case for subscriptionPrototypeCreateOrders
     *
     * Creates a new instance in orders of this model..
     *
     */
    public function testSubscriptionPrototypeCreateOrders()
    {

    }

    /**
     * Test case for subscriptionPrototypeCreateSites
     *
     * Creates a new instance in sites of this model..
     *
     */
    public function testSubscriptionPrototypeCreateSites()
    {

    }

    /**
     * Test case for subscriptionPrototypeDeleteOrders
     *
     * Deletes all orders of this model..
     *
     */
    public function testSubscriptionPrototypeDeleteOrders()
    {

    }

    /**
     * Test case for subscriptionPrototypeDeleteSites
     *
     * Deletes all sites of this model..
     *
     */
    public function testSubscriptionPrototypeDeleteSites()
    {

    }

    /**
     * Test case for subscriptionPrototypeDestroyByIdOrders
     *
     * Delete a related item by id for orders..
     *
     */
    public function testSubscriptionPrototypeDestroyByIdOrders()
    {

    }

    /**
     * Test case for subscriptionPrototypeDestroyByIdSites
     *
     * Delete a related item by id for sites..
     *
     */
    public function testSubscriptionPrototypeDestroyByIdSites()
    {

    }

    /**
     * Test case for subscriptionPrototypeExistsOrders
     *
     * Check the existence of orders relation to an item by id..
     *
     */
    public function testSubscriptionPrototypeExistsOrders()
    {

    }

    /**
     * Test case for subscriptionPrototypeExistsSites
     *
     * Check the existence of sites relation to an item by id..
     *
     */
    public function testSubscriptionPrototypeExistsSites()
    {

    }

    /**
     * Test case for subscriptionPrototypeFindByIdOrders
     *
     * Find a related item by id for orders..
     *
     */
    public function testSubscriptionPrototypeFindByIdOrders()
    {

    }

    /**
     * Test case for subscriptionPrototypeFindByIdSites
     *
     * Find a related item by id for sites..
     *
     */
    public function testSubscriptionPrototypeFindByIdSites()
    {

    }

    /**
     * Test case for subscriptionPrototypeGetOrders
     *
     * Queries orders of Subscription..
     *
     */
    public function testSubscriptionPrototypeGetOrders()
    {

    }

    /**
     * Test case for subscriptionPrototypeGetProduct
     *
     * Fetches belongsTo relation product..
     *
     */
    public function testSubscriptionPrototypeGetProduct()
    {

    }

    /**
     * Test case for subscriptionPrototypeGetSites
     *
     * Queries sites of Subscription..
     *
     */
    public function testSubscriptionPrototypeGetSites()
    {

    }

    /**
     * Test case for subscriptionPrototypeGetSubscriber
     *
     * Fetches belongsTo relation subscriber..
     *
     */
    public function testSubscriptionPrototypeGetSubscriber()
    {

    }

    /**
     * Test case for subscriptionPrototypeLinkOrders
     *
     * Add a related item by id for orders..
     *
     */
    public function testSubscriptionPrototypeLinkOrders()
    {

    }

    /**
     * Test case for subscriptionPrototypeLinkSites
     *
     * Add a related item by id for sites..
     *
     */
    public function testSubscriptionPrototypeLinkSites()
    {

    }

    /**
     * Test case for subscriptionPrototypePatchAttributes
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testSubscriptionPrototypePatchAttributes()
    {

    }

    /**
     * Test case for subscriptionPrototypeUnlinkOrders
     *
     * Remove the orders relation to an item by id..
     *
     */
    public function testSubscriptionPrototypeUnlinkOrders()
    {

    }

    /**
     * Test case for subscriptionPrototypeUnlinkSites
     *
     * Remove the sites relation to an item by id..
     *
     */
    public function testSubscriptionPrototypeUnlinkSites()
    {

    }

    /**
     * Test case for subscriptionPrototypeUpdateByIdOrders
     *
     * Update a related item by id for orders..
     *
     */
    public function testSubscriptionPrototypeUpdateByIdOrders()
    {

    }

    /**
     * Test case for subscriptionPrototypeUpdateByIdSites
     *
     * Update a related item by id for sites..
     *
     */
    public function testSubscriptionPrototypeUpdateByIdSites()
    {

    }

    /**
     * Test case for subscriptionReplaceByIdPostSubscriptionsidReplace
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testSubscriptionReplaceByIdPostSubscriptionsidReplace()
    {

    }

    /**
     * Test case for subscriptionReplaceByIdPutSubscriptionsid
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testSubscriptionReplaceByIdPutSubscriptionsid()
    {

    }

    /**
     * Test case for subscriptionReplaceOrCreatePostSubscriptionsReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testSubscriptionReplaceOrCreatePostSubscriptionsReplaceOrCreate()
    {

    }

    /**
     * Test case for subscriptionReplaceOrCreatePutSubscriptions
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testSubscriptionReplaceOrCreatePutSubscriptions()
    {

    }

    /**
     * Test case for subscriptionUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testSubscriptionUpdateAll()
    {

    }

    /**
     * Test case for subscriptionUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testSubscriptionUpsertWithWhere()
    {

    }

}
