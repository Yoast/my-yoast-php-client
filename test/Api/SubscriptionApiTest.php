<?php
/**
 * SubscriptionApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * MyYoast
 *
 * The MyYoast Api
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.50
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use Yoast\MyYoastApiClient\Configuration;
use Yoast\MyYoastApiClient\ApiException;
use Yoast\MyYoastApiClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SubscriptionApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SubscriptionApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for calculateExpansionPrice
     *
     * Calculate expansion price.
     *
     */
    public function testCalculateExpansionPrice()
    {
    }

    /**
     * Test case for deleteOne
     *
     * Delete a subscription.
     *
     */
    public function testDeleteOne()
    {
    }

    /**
     * Test case for forceCancel
     *
     * Forcefully cancel a subscription.
     *
     */
    public function testForceCancel()
    {
    }

    /**
     * Test case for getExpiringSubscriptions
     *
     * .
     *
     */
    public function testGetExpiringSubscriptions()
    {
    }

    /**
     * Test case for getMany
     *
     * Get subscriptions.
     *
     */
    public function testGetMany()
    {
    }

    /**
     * Test case for getManyPaged
     *
     * Get subscriptions.
     *
     */
    public function testGetManyPaged()
    {
    }

    /**
     * Test case for getMutations
     *
     * Get all subscription mutation events.
     *
     */
    public function testGetMutations()
    {
    }

    /**
     * Test case for getOne
     *
     * Get a subscription.
     *
     */
    public function testGetOne()
    {
    }

    /**
     * Test case for getOneAsEntity
     *
     * Get a subscription.
     *
     */
    public function testGetOneAsEntity()
    {
    }

    /**
     * Test case for getProductSwitchOptions
     *
     * Fetch product switch options.
     *
     */
    public function testGetProductSwitchOptions()
    {
    }

    /**
     * Test case for linkSite
     *
     * Link a subscription to provided site URL.
     *
     */
    public function testLinkSite()
    {
    }

    /**
     * Test case for recalculateSubscriptionCount
     *
     * Recalculate SubscriptionCount..
     *
     */
    public function testRecalculateSubscriptionCount()
    {
    }

    /**
     * Test case for renew
     *
     * Renew subscriptions.
     *
     */
    public function testRenew()
    {
    }

    /**
     * Test case for runScript
     *
     * .
     *
     */
    public function testRunScript()
    {
    }

    /**
     * Test case for setExpiryDate
     *
     * Set Date..
     *
     */
    public function testSetExpiryDate()
    {
    }

    /**
     * Test case for switchPaymentMethod
     *
     * .
     *
     */
    public function testSwitchPaymentMethod()
    {
    }

    /**
     * Test case for switchProduct
     *
     * Switch to another product.
     *
     */
    public function testSwitchProduct()
    {
    }

    /**
     * Test case for transferOwnership
     *
     * Transfer subscription ownership.
     *
     */
    public function testTransferOwnership()
    {
    }

    /**
     * Test case for upgrade
     *
     * Upgrade subscriptions.
     *
     */
    public function testUpgrade()
    {
    }
}
