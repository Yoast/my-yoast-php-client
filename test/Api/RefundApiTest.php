<?php
/**
 * RefundApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * my-yoast
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use \Yoast\MyYoastApiClient\Configuration;
use \Yoast\MyYoastApiClient\ApiClient;
use \Yoast\MyYoastApiClient\ApiException;
use \Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * RefundApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RefundApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for refundCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testRefundCount()
    {
    }

    /**
     * Test case for refundCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testRefundCreate()
    {
    }

    /**
     * Test case for refundCreateChangeStreamGetRefundsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testRefundCreateChangeStreamGetRefundsChangeStream()
    {
    }

    /**
     * Test case for refundCreateChangeStreamPostRefundsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testRefundCreateChangeStreamPostRefundsChangeStream()
    {
    }

    /**
     * Test case for refundDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testRefundDeleteById()
    {
    }

    /**
     * Test case for refundExistsGetRefundsidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testRefundExistsGetRefundsidExists()
    {
    }

    /**
     * Test case for refundExistsHeadRefundsid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testRefundExistsHeadRefundsid()
    {
    }

    /**
     * Test case for refundFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testRefundFind()
    {
    }

    /**
     * Test case for refundFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testRefundFindById()
    {
    }

    /**
     * Test case for refundFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testRefundFindOne()
    {
    }

    /**
     * Test case for refundPatchOrCreate
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testRefundPatchOrCreate()
    {
    }

    /**
     * Test case for refundPrototypeCountLineItems
     *
     * Counts lineItems of Refund..
     *
     */
    public function testRefundPrototypeCountLineItems()
    {
    }

    /**
     * Test case for refundPrototypeCountRefundLineItems
     *
     * Counts refundLineItems of Refund..
     *
     */
    public function testRefundPrototypeCountRefundLineItems()
    {
    }

    /**
     * Test case for refundPrototypeCreateLineItems
     *
     * Creates a new instance in lineItems of this model..
     *
     */
    public function testRefundPrototypeCreateLineItems()
    {
    }

    /**
     * Test case for refundPrototypeCreateRefundLineItems
     *
     * Creates a new instance in refundLineItems of this model..
     *
     */
    public function testRefundPrototypeCreateRefundLineItems()
    {
    }

    /**
     * Test case for refundPrototypeDeleteLineItems
     *
     * Deletes all lineItems of this model..
     *
     */
    public function testRefundPrototypeDeleteLineItems()
    {
    }

    /**
     * Test case for refundPrototypeDeleteRefundLineItems
     *
     * Deletes all refundLineItems of this model..
     *
     */
    public function testRefundPrototypeDeleteRefundLineItems()
    {
    }

    /**
     * Test case for refundPrototypeDestroyByIdLineItems
     *
     * Delete a related item by id for lineItems..
     *
     */
    public function testRefundPrototypeDestroyByIdLineItems()
    {
    }

    /**
     * Test case for refundPrototypeDestroyByIdRefundLineItems
     *
     * Delete a related item by id for refundLineItems..
     *
     */
    public function testRefundPrototypeDestroyByIdRefundLineItems()
    {
    }

    /**
     * Test case for refundPrototypeExistsLineItems
     *
     * Check the existence of lineItems relation to an item by id..
     *
     */
    public function testRefundPrototypeExistsLineItems()
    {
    }

    /**
     * Test case for refundPrototypeFindByIdLineItems
     *
     * Find a related item by id for lineItems..
     *
     */
    public function testRefundPrototypeFindByIdLineItems()
    {
    }

    /**
     * Test case for refundPrototypeFindByIdRefundLineItems
     *
     * Find a related item by id for refundLineItems..
     *
     */
    public function testRefundPrototypeFindByIdRefundLineItems()
    {
    }

    /**
     * Test case for refundPrototypeGetLineItems
     *
     * Queries lineItems of Refund..
     *
     */
    public function testRefundPrototypeGetLineItems()
    {
    }

    /**
     * Test case for refundPrototypeGetOrder
     *
     * Fetches belongsTo relation order..
     *
     */
    public function testRefundPrototypeGetOrder()
    {
    }

    /**
     * Test case for refundPrototypeGetRefundLineItems
     *
     * Queries refundLineItems of Refund..
     *
     */
    public function testRefundPrototypeGetRefundLineItems()
    {
    }

    /**
     * Test case for refundPrototypeLinkLineItems
     *
     * Add a related item by id for lineItems..
     *
     */
    public function testRefundPrototypeLinkLineItems()
    {
    }

    /**
     * Test case for refundPrototypePatchAttributes
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testRefundPrototypePatchAttributes()
    {
    }

    /**
     * Test case for refundPrototypeUnlinkLineItems
     *
     * Remove the lineItems relation to an item by id..
     *
     */
    public function testRefundPrototypeUnlinkLineItems()
    {
    }

    /**
     * Test case for refundPrototypeUpdateByIdLineItems
     *
     * Update a related item by id for lineItems..
     *
     */
    public function testRefundPrototypeUpdateByIdLineItems()
    {
    }

    /**
     * Test case for refundPrototypeUpdateByIdRefundLineItems
     *
     * Update a related item by id for refundLineItems..
     *
     */
    public function testRefundPrototypeUpdateByIdRefundLineItems()
    {
    }

    /**
     * Test case for refundReplaceByIdPostRefundsidReplace
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testRefundReplaceByIdPostRefundsidReplace()
    {
    }

    /**
     * Test case for refundReplaceByIdPutRefundsid
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testRefundReplaceByIdPutRefundsid()
    {
    }

    /**
     * Test case for refundReplaceOrCreatePostRefundsReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testRefundReplaceOrCreatePostRefundsReplaceOrCreate()
    {
    }

    /**
     * Test case for refundReplaceOrCreatePutRefunds
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testRefundReplaceOrCreatePutRefunds()
    {
    }

    /**
     * Test case for refundUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testRefundUpdateAll()
    {
    }

    /**
     * Test case for refundUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testRefundUpsertWithWhere()
    {
    }
}
