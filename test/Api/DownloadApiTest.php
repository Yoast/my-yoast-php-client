<?php
/**
 * DownloadApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * my-yoast
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use \Yoast\MyYoastApiClient\Configuration;
use \Yoast\MyYoastApiClient\ApiClient;
use \Yoast\MyYoastApiClient\ApiException;
use \Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * DownloadApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DownloadApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for downloadCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testDownloadCount()
    {
    }

    /**
     * Test case for downloadCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testDownloadCreate()
    {
    }

    /**
     * Test case for downloadCreateChangeStreamGetDownloadsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testDownloadCreateChangeStreamGetDownloadsChangeStream()
    {
    }

    /**
     * Test case for downloadCreateChangeStreamPostDownloadsChangeStream
     *
     * Create a change stream..
     *
     */
    public function testDownloadCreateChangeStreamPostDownloadsChangeStream()
    {
    }

    /**
     * Test case for downloadDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testDownloadDeleteById()
    {
    }

    /**
     * Test case for downloadDownload
     *
     * Downloads the requested file..
     *
     */
    public function testDownloadDownload()
    {
    }

    /**
     * Test case for downloadExistsGetDownloadsidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testDownloadExistsGetDownloadsidExists()
    {
    }

    /**
     * Test case for downloadExistsHeadDownloadsid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testDownloadExistsHeadDownloadsid()
    {
    }

    /**
     * Test case for downloadFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testDownloadFind()
    {
    }

    /**
     * Test case for downloadFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testDownloadFindById()
    {
    }

    /**
     * Test case for downloadFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testDownloadFindOne()
    {
    }

    /**
     * Test case for downloadPatchOrCreate
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testDownloadPatchOrCreate()
    {
    }

    /**
     * Test case for downloadPrototypeCountProducts
     *
     * Counts products of Download..
     *
     */
    public function testDownloadPrototypeCountProducts()
    {
    }

    /**
     * Test case for downloadPrototypeCreateProducts
     *
     * Creates a new instance in products of this model..
     *
     */
    public function testDownloadPrototypeCreateProducts()
    {
    }

    /**
     * Test case for downloadPrototypeDeleteProducts
     *
     * Deletes all products of this model..
     *
     */
    public function testDownloadPrototypeDeleteProducts()
    {
    }

    /**
     * Test case for downloadPrototypeDestroyByIdProducts
     *
     * Delete a related item by id for products..
     *
     */
    public function testDownloadPrototypeDestroyByIdProducts()
    {
    }

    /**
     * Test case for downloadPrototypeExistsProducts
     *
     * Check the existence of products relation to an item by id..
     *
     */
    public function testDownloadPrototypeExistsProducts()
    {
    }

    /**
     * Test case for downloadPrototypeFindByIdProducts
     *
     * Find a related item by id for products..
     *
     */
    public function testDownloadPrototypeFindByIdProducts()
    {
    }

    /**
     * Test case for downloadPrototypeGetProducts
     *
     * Queries products of Download..
     *
     */
    public function testDownloadPrototypeGetProducts()
    {
    }

    /**
     * Test case for downloadPrototypeLinkProducts
     *
     * Add a related item by id for products..
     *
     */
    public function testDownloadPrototypeLinkProducts()
    {
    }

    /**
     * Test case for downloadPrototypePatchAttributes
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testDownloadPrototypePatchAttributes()
    {
    }

    /**
     * Test case for downloadPrototypeUnlinkProducts
     *
     * Remove the products relation to an item by id..
     *
     */
    public function testDownloadPrototypeUnlinkProducts()
    {
    }

    /**
     * Test case for downloadPrototypeUpdateByIdProducts
     *
     * Update a related item by id for products..
     *
     */
    public function testDownloadPrototypeUpdateByIdProducts()
    {
    }

    /**
     * Test case for downloadReplaceByIdPostDownloadsidReplace
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testDownloadReplaceByIdPostDownloadsidReplace()
    {
    }

    /**
     * Test case for downloadReplaceByIdPutDownloadsid
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testDownloadReplaceByIdPutDownloadsid()
    {
    }

    /**
     * Test case for downloadReplaceOrCreatePostDownloadsReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testDownloadReplaceOrCreatePostDownloadsReplaceOrCreate()
    {
    }

    /**
     * Test case for downloadReplaceOrCreatePutDownloads
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testDownloadReplaceOrCreatePutDownloads()
    {
    }

    /**
     * Test case for downloadUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testDownloadUpdateAll()
    {
    }

    /**
     * Test case for downloadUpload
     *
     * Uploads the requested file..
     *
     */
    public function testDownloadUpload()
    {
    }

    /**
     * Test case for downloadUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testDownloadUpsertWithWhere()
    {
    }
}
