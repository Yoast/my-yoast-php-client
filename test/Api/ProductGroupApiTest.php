<?php
/**
 * ProductGroupApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * MyYoast server
 *
 * The MyYoast server NestJS Api
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.9
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use Yoast\MyYoastApiClient\Configuration;
use Yoast\MyYoastApiClient\ApiException;
use Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * ProductGroupApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProductGroupApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for apiProductGroupsBulkPost
     *
     * Create many ProductGroup.
     *
     */
    public function testApiProductGroupsBulkPost()
    {
    }

    /**
     * Test case for apiProductGroupsGet
     *
     * Retrieve many ProductGroup.
     *
     */
    public function testApiProductGroupsGet()
    {
    }

    /**
     * Test case for apiProductGroupsIdDelete
     *
     * Delete one ProductGroup.
     *
     */
    public function testApiProductGroupsIdDelete()
    {
    }

    /**
     * Test case for apiProductGroupsIdGet
     *
     * Retrieve one ProductGroup.
     *
     */
    public function testApiProductGroupsIdGet()
    {
    }

    /**
     * Test case for apiProductGroupsIdPatch
     *
     * Update one ProductGroup.
     *
     */
    public function testApiProductGroupsIdPatch()
    {
    }

    /**
     * Test case for apiProductGroupsPost
     *
     * Create one ProductGroup.
     *
     */
    public function testApiProductGroupsPost()
    {
    }
}
