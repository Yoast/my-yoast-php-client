<?php
/**
 * CustomerNoteApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * my-yoast
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use \Yoast\MyYoastApiClient\Configuration;
use \Yoast\MyYoastApiClient\ApiClient;
use \Yoast\MyYoastApiClient\ApiException;
use \Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * CustomerNoteApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomerNoteApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for customerNoteCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testCustomerNoteCount()
    {
    }

    /**
     * Test case for customerNoteCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testCustomerNoteCreate()
    {
    }

    /**
     * Test case for customerNoteCreateChangeStreamGetCustomerNotesChangeStream
     *
     * Create a change stream..
     *
     */
    public function testCustomerNoteCreateChangeStreamGetCustomerNotesChangeStream()
    {
    }

    /**
     * Test case for customerNoteCreateChangeStreamPostCustomerNotesChangeStream
     *
     * Create a change stream..
     *
     */
    public function testCustomerNoteCreateChangeStreamPostCustomerNotesChangeStream()
    {
    }

    /**
     * Test case for customerNoteDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testCustomerNoteDeleteById()
    {
    }

    /**
     * Test case for customerNoteExistsGetCustomerNotesidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCustomerNoteExistsGetCustomerNotesidExists()
    {
    }

    /**
     * Test case for customerNoteExistsHeadCustomerNotesid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCustomerNoteExistsHeadCustomerNotesid()
    {
    }

    /**
     * Test case for customerNoteFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testCustomerNoteFind()
    {
    }

    /**
     * Test case for customerNoteFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testCustomerNoteFindById()
    {
    }

    /**
     * Test case for customerNoteFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testCustomerNoteFindOne()
    {
    }

    /**
     * Test case for customerNotePatchOrCreate
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomerNotePatchOrCreate()
    {
    }

    /**
     * Test case for customerNotePrototypeGetAuthor
     *
     * Fetches belongsTo relation author..
     *
     */
    public function testCustomerNotePrototypeGetAuthor()
    {
    }

    /**
     * Test case for customerNotePrototypeGetCustomer
     *
     * Fetches belongsTo relation customer..
     *
     */
    public function testCustomerNotePrototypeGetCustomer()
    {
    }

    /**
     * Test case for customerNotePrototypePatchAttributes
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomerNotePrototypePatchAttributes()
    {
    }

    /**
     * Test case for customerNoteReplaceByIdPostCustomerNotesidReplace
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomerNoteReplaceByIdPostCustomerNotesidReplace()
    {
    }

    /**
     * Test case for customerNoteReplaceByIdPutCustomerNotesid
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomerNoteReplaceByIdPutCustomerNotesid()
    {
    }

    /**
     * Test case for customerNoteReplaceOrCreatePostCustomerNotesReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomerNoteReplaceOrCreatePostCustomerNotesReplaceOrCreate()
    {
    }

    /**
     * Test case for customerNoteReplaceOrCreatePutCustomerNotes
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomerNoteReplaceOrCreatePutCustomerNotes()
    {
    }

    /**
     * Test case for customerNoteUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testCustomerNoteUpdateAll()
    {
    }

    /**
     * Test case for customerNoteUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testCustomerNoteUpsertWithWhere()
    {
    }
}
