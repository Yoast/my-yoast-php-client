<?php
/**
 * CustomerApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * my-yoast
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Yoast\MyYoastApiClient;

use \Yoast\MyYoastApiClient\Configuration;
use \Yoast\MyYoastApiClient\ApiException;
use \Yoast\MyYoastApiClient\ObjectSerializer;

/**
 * CustomerApiTest Class Doc Comment
 *
 * @category Class
 * @package  Yoast\MyYoastApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomerApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for customerChangePassword
     *
     * Change a user's password..
     *
     */
    public function testCustomerChangePassword()
    {
    }

    /**
     * Test case for customerConfirm
     *
     * Confirm a user registration with email verification token..
     *
     */
    public function testCustomerConfirm()
    {
    }

    /**
     * Test case for customerCount
     *
     * Count instances of the model matched by where from the data source..
     *
     */
    public function testCustomerCount()
    {
    }

    /**
     * Test case for customerCreate
     *
     * Create a new instance of the model and persist it into the data source..
     *
     */
    public function testCustomerCreate()
    {
    }

    /**
     * Test case for customerCreateChangeStreamGetCustomersChangeStream
     *
     * Create a change stream..
     *
     */
    public function testCustomerCreateChangeStreamGetCustomersChangeStream()
    {
    }

    /**
     * Test case for customerCreateChangeStreamPostCustomersChangeStream
     *
     * Create a change stream..
     *
     */
    public function testCustomerCreateChangeStreamPostCustomersChangeStream()
    {
    }

    /**
     * Test case for customerCurrent
     *
     * .
     *
     */
    public function testCustomerCurrent()
    {
    }

    /**
     * Test case for customerDeleteById
     *
     * Delete a model instance by {{id}} from the data source..
     *
     */
    public function testCustomerDeleteById()
    {
    }

    /**
     * Test case for customerEnable
     *
     * Enables the customer with the given id..
     *
     */
    public function testCustomerEnable()
    {
    }

    /**
     * Test case for customerExistsGetCustomersidExists
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCustomerExistsGetCustomersidExists()
    {
    }

    /**
     * Test case for customerExistsHeadCustomersid
     *
     * Check whether a model instance exists in the data source..
     *
     */
    public function testCustomerExistsHeadCustomersid()
    {
    }

    /**
     * Test case for customerFind
     *
     * Find all instances of the model matched by filter from the data source..
     *
     */
    public function testCustomerFind()
    {
    }

    /**
     * Test case for customerFindById
     *
     * Find a model instance by {{id}} from the data source..
     *
     */
    public function testCustomerFindById()
    {
    }

    /**
     * Test case for customerFindOne
     *
     * Find first instance of the model matched by filter from the data source..
     *
     */
    public function testCustomerFindOne()
    {
    }

    /**
     * Test case for customerFindRefunds
     *
     * Finds all refunds for a customer..
     *
     */
    public function testCustomerFindRefunds()
    {
    }

    /**
     * Test case for customerFromWooCommerce
     *
     * .
     *
     */
    public function testCustomerFromWooCommerce()
    {
    }

    /**
     * Test case for customerLogin
     *
     * Login a user with username/email and password..
     *
     */
    public function testCustomerLogin()
    {
    }

    /**
     * Test case for customerLogout
     *
     * Logout a user with access token..
     *
     */
    public function testCustomerLogout()
    {
    }

    /**
     * Test case for customerPatchOrCreate
     *
     * Patch an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomerPatchOrCreate()
    {
    }

    /**
     * Test case for customerPatchProfile
     *
     * Updates the profile with the supplied information..
     *
     */
    public function testCustomerPatchProfile()
    {
    }

    /**
     * Test case for customerProfile
     *
     * Finds the profile for the customer with the given id..
     *
     */
    public function testCustomerProfile()
    {
    }

    /**
     * Test case for customerPrototypeCountAccessTokens
     *
     * Counts accessTokens of Customer..
     *
     */
    public function testCustomerPrototypeCountAccessTokens()
    {
    }

    /**
     * Test case for customerPrototypeCountComposerTokens
     *
     * Counts composerTokens of Customer..
     *
     */
    public function testCustomerPrototypeCountComposerTokens()
    {
    }

    /**
     * Test case for customerPrototypeCountCourseEnrollments
     *
     * Counts courseEnrollments of Customer..
     *
     */
    public function testCustomerPrototypeCountCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeCountCredentials
     *
     * Counts credentials of Customer..
     *
     */
    public function testCustomerPrototypeCountCredentials()
    {
    }

    /**
     * Test case for customerPrototypeCountIdentities
     *
     * Counts identities of Customer..
     *
     */
    public function testCustomerPrototypeCountIdentities()
    {
    }

    /**
     * Test case for customerPrototypeCountOrders
     *
     * Counts orders of Customer..
     *
     */
    public function testCustomerPrototypeCountOrders()
    {
    }

    /**
     * Test case for customerPrototypeCountOwnedCourseEnrollments
     *
     * Counts ownedCourseEnrollments of Customer..
     *
     */
    public function testCustomerPrototypeCountOwnedCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeCountRoles
     *
     * Counts roles of Customer..
     *
     */
    public function testCustomerPrototypeCountRoles()
    {
    }

    /**
     * Test case for customerPrototypeCountSites
     *
     * Counts sites of Customer..
     *
     */
    public function testCustomerPrototypeCountSites()
    {
    }

    /**
     * Test case for customerPrototypeCountSubscriptions
     *
     * Counts subscriptions of Customer..
     *
     */
    public function testCustomerPrototypeCountSubscriptions()
    {
    }

    /**
     * Test case for customerPrototypeCreateAccessTokens
     *
     * Creates a new instance in accessTokens of this model..
     *
     */
    public function testCustomerPrototypeCreateAccessTokens()
    {
    }

    /**
     * Test case for customerPrototypeCreateComposerTokens
     *
     * Creates a new instance in composerTokens of this model..
     *
     */
    public function testCustomerPrototypeCreateComposerTokens()
    {
    }

    /**
     * Test case for customerPrototypeCreateCourseEnrollments
     *
     * Creates a new instance in courseEnrollments of this model..
     *
     */
    public function testCustomerPrototypeCreateCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeCreateCredentials
     *
     * Creates a new instance in credentials of this model..
     *
     */
    public function testCustomerPrototypeCreateCredentials()
    {
    }

    /**
     * Test case for customerPrototypeCreateIdentities
     *
     * Creates a new instance in identities of this model..
     *
     */
    public function testCustomerPrototypeCreateIdentities()
    {
    }

    /**
     * Test case for customerPrototypeCreateOrders
     *
     * Creates a new instance in orders of this model..
     *
     */
    public function testCustomerPrototypeCreateOrders()
    {
    }

    /**
     * Test case for customerPrototypeCreateOwnedCourseEnrollments
     *
     * Creates a new instance in ownedCourseEnrollments of this model..
     *
     */
    public function testCustomerPrototypeCreateOwnedCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeCreateRoles
     *
     * Creates a new instance in roles of this model..
     *
     */
    public function testCustomerPrototypeCreateRoles()
    {
    }

    /**
     * Test case for customerPrototypeCreateSites
     *
     * Creates a new instance in sites of this model..
     *
     */
    public function testCustomerPrototypeCreateSites()
    {
    }

    /**
     * Test case for customerPrototypeCreateSubscriptions
     *
     * Creates a new instance in subscriptions of this model..
     *
     */
    public function testCustomerPrototypeCreateSubscriptions()
    {
    }

    /**
     * Test case for customerPrototypeDeleteAccessTokens
     *
     * Deletes all accessTokens of this model..
     *
     */
    public function testCustomerPrototypeDeleteAccessTokens()
    {
    }

    /**
     * Test case for customerPrototypeDeleteComposerTokens
     *
     * Deletes all composerTokens of this model..
     *
     */
    public function testCustomerPrototypeDeleteComposerTokens()
    {
    }

    /**
     * Test case for customerPrototypeDeleteCourseEnrollments
     *
     * Deletes all courseEnrollments of this model..
     *
     */
    public function testCustomerPrototypeDeleteCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeDeleteCredentials
     *
     * Deletes all credentials of this model..
     *
     */
    public function testCustomerPrototypeDeleteCredentials()
    {
    }

    /**
     * Test case for customerPrototypeDeleteIdentities
     *
     * Deletes all identities of this model..
     *
     */
    public function testCustomerPrototypeDeleteIdentities()
    {
    }

    /**
     * Test case for customerPrototypeDeleteOrders
     *
     * Deletes all orders of this model..
     *
     */
    public function testCustomerPrototypeDeleteOrders()
    {
    }

    /**
     * Test case for customerPrototypeDeleteOwnedCourseEnrollments
     *
     * Deletes all ownedCourseEnrollments of this model..
     *
     */
    public function testCustomerPrototypeDeleteOwnedCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeDeleteRoles
     *
     * Deletes all roles of this model..
     *
     */
    public function testCustomerPrototypeDeleteRoles()
    {
    }

    /**
     * Test case for customerPrototypeDeleteSites
     *
     * Deletes all sites of this model..
     *
     */
    public function testCustomerPrototypeDeleteSites()
    {
    }

    /**
     * Test case for customerPrototypeDeleteSubscriptions
     *
     * Deletes all subscriptions of this model..
     *
     */
    public function testCustomerPrototypeDeleteSubscriptions()
    {
    }

    /**
     * Test case for customerPrototypeDestroyByIdAccessTokens
     *
     * Delete a related item by id for accessTokens..
     *
     */
    public function testCustomerPrototypeDestroyByIdAccessTokens()
    {
    }

    /**
     * Test case for customerPrototypeDestroyByIdComposerTokens
     *
     * Delete a related item by id for composerTokens..
     *
     */
    public function testCustomerPrototypeDestroyByIdComposerTokens()
    {
    }

    /**
     * Test case for customerPrototypeDestroyByIdCourseEnrollments
     *
     * Delete a related item by id for courseEnrollments..
     *
     */
    public function testCustomerPrototypeDestroyByIdCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeDestroyByIdCredentials
     *
     * Delete a related item by id for credentials..
     *
     */
    public function testCustomerPrototypeDestroyByIdCredentials()
    {
    }

    /**
     * Test case for customerPrototypeDestroyByIdIdentities
     *
     * Delete a related item by id for identities..
     *
     */
    public function testCustomerPrototypeDestroyByIdIdentities()
    {
    }

    /**
     * Test case for customerPrototypeDestroyByIdOrders
     *
     * Delete a related item by id for orders..
     *
     */
    public function testCustomerPrototypeDestroyByIdOrders()
    {
    }

    /**
     * Test case for customerPrototypeDestroyByIdOwnedCourseEnrollments
     *
     * Delete a related item by id for ownedCourseEnrollments..
     *
     */
    public function testCustomerPrototypeDestroyByIdOwnedCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeDestroyByIdRoles
     *
     * Delete a related item by id for roles..
     *
     */
    public function testCustomerPrototypeDestroyByIdRoles()
    {
    }

    /**
     * Test case for customerPrototypeDestroyByIdSites
     *
     * Delete a related item by id for sites..
     *
     */
    public function testCustomerPrototypeDestroyByIdSites()
    {
    }

    /**
     * Test case for customerPrototypeDestroyByIdSubscriptions
     *
     * Delete a related item by id for subscriptions..
     *
     */
    public function testCustomerPrototypeDestroyByIdSubscriptions()
    {
    }

    /**
     * Test case for customerPrototypeExistsRoles
     *
     * Check the existence of roles relation to an item by id..
     *
     */
    public function testCustomerPrototypeExistsRoles()
    {
    }

    /**
     * Test case for customerPrototypeFindByIdAccessTokens
     *
     * Find a related item by id for accessTokens..
     *
     */
    public function testCustomerPrototypeFindByIdAccessTokens()
    {
    }

    /**
     * Test case for customerPrototypeFindByIdComposerTokens
     *
     * Find a related item by id for composerTokens..
     *
     */
    public function testCustomerPrototypeFindByIdComposerTokens()
    {
    }

    /**
     * Test case for customerPrototypeFindByIdCourseEnrollments
     *
     * Find a related item by id for courseEnrollments..
     *
     */
    public function testCustomerPrototypeFindByIdCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeFindByIdCredentials
     *
     * Find a related item by id for credentials..
     *
     */
    public function testCustomerPrototypeFindByIdCredentials()
    {
    }

    /**
     * Test case for customerPrototypeFindByIdIdentities
     *
     * Find a related item by id for identities..
     *
     */
    public function testCustomerPrototypeFindByIdIdentities()
    {
    }

    /**
     * Test case for customerPrototypeFindByIdOrders
     *
     * Find a related item by id for orders..
     *
     */
    public function testCustomerPrototypeFindByIdOrders()
    {
    }

    /**
     * Test case for customerPrototypeFindByIdOwnedCourseEnrollments
     *
     * Find a related item by id for ownedCourseEnrollments..
     *
     */
    public function testCustomerPrototypeFindByIdOwnedCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeFindByIdRoles
     *
     * Find a related item by id for roles..
     *
     */
    public function testCustomerPrototypeFindByIdRoles()
    {
    }

    /**
     * Test case for customerPrototypeFindByIdSites
     *
     * Find a related item by id for sites..
     *
     */
    public function testCustomerPrototypeFindByIdSites()
    {
    }

    /**
     * Test case for customerPrototypeFindByIdSubscriptions
     *
     * Find a related item by id for subscriptions..
     *
     */
    public function testCustomerPrototypeFindByIdSubscriptions()
    {
    }

    /**
     * Test case for customerPrototypeGetAccessTokens
     *
     * Queries accessTokens of Customer..
     *
     */
    public function testCustomerPrototypeGetAccessTokens()
    {
    }

    /**
     * Test case for customerPrototypeGetComposerTokens
     *
     * Queries composerTokens of Customer..
     *
     */
    public function testCustomerPrototypeGetComposerTokens()
    {
    }

    /**
     * Test case for customerPrototypeGetCourseEnrollments
     *
     * Queries courseEnrollments of Customer..
     *
     */
    public function testCustomerPrototypeGetCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeGetCredentials
     *
     * Queries credentials of Customer..
     *
     */
    public function testCustomerPrototypeGetCredentials()
    {
    }

    /**
     * Test case for customerPrototypeGetIdentities
     *
     * Queries identities of Customer..
     *
     */
    public function testCustomerPrototypeGetIdentities()
    {
    }

    /**
     * Test case for customerPrototypeGetOrders
     *
     * Queries orders of Customer..
     *
     */
    public function testCustomerPrototypeGetOrders()
    {
    }

    /**
     * Test case for customerPrototypeGetOwnedCourseEnrollments
     *
     * Queries ownedCourseEnrollments of Customer..
     *
     */
    public function testCustomerPrototypeGetOwnedCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeGetRoles
     *
     * Queries roles of Customer..
     *
     */
    public function testCustomerPrototypeGetRoles()
    {
    }

    /**
     * Test case for customerPrototypeGetSites
     *
     * Queries sites of Customer..
     *
     */
    public function testCustomerPrototypeGetSites()
    {
    }

    /**
     * Test case for customerPrototypeGetSubscriptions
     *
     * Queries subscriptions of Customer..
     *
     */
    public function testCustomerPrototypeGetSubscriptions()
    {
    }

    /**
     * Test case for customerPrototypeLinkRoles
     *
     * Add a related item by id for roles..
     *
     */
    public function testCustomerPrototypeLinkRoles()
    {
    }

    /**
     * Test case for customerPrototypePatchAttributes
     *
     * Patch attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomerPrototypePatchAttributes()
    {
    }

    /**
     * Test case for customerPrototypeUnlinkRoles
     *
     * Remove the roles relation to an item by id..
     *
     */
    public function testCustomerPrototypeUnlinkRoles()
    {
    }

    /**
     * Test case for customerPrototypeUpdateByIdAccessTokens
     *
     * Update a related item by id for accessTokens..
     *
     */
    public function testCustomerPrototypeUpdateByIdAccessTokens()
    {
    }

    /**
     * Test case for customerPrototypeUpdateByIdComposerTokens
     *
     * Update a related item by id for composerTokens..
     *
     */
    public function testCustomerPrototypeUpdateByIdComposerTokens()
    {
    }

    /**
     * Test case for customerPrototypeUpdateByIdCourseEnrollments
     *
     * Update a related item by id for courseEnrollments..
     *
     */
    public function testCustomerPrototypeUpdateByIdCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeUpdateByIdCredentials
     *
     * Update a related item by id for credentials..
     *
     */
    public function testCustomerPrototypeUpdateByIdCredentials()
    {
    }

    /**
     * Test case for customerPrototypeUpdateByIdIdentities
     *
     * Update a related item by id for identities..
     *
     */
    public function testCustomerPrototypeUpdateByIdIdentities()
    {
    }

    /**
     * Test case for customerPrototypeUpdateByIdOrders
     *
     * Update a related item by id for orders..
     *
     */
    public function testCustomerPrototypeUpdateByIdOrders()
    {
    }

    /**
     * Test case for customerPrototypeUpdateByIdOwnedCourseEnrollments
     *
     * Update a related item by id for ownedCourseEnrollments..
     *
     */
    public function testCustomerPrototypeUpdateByIdOwnedCourseEnrollments()
    {
    }

    /**
     * Test case for customerPrototypeUpdateByIdRoles
     *
     * Update a related item by id for roles..
     *
     */
    public function testCustomerPrototypeUpdateByIdRoles()
    {
    }

    /**
     * Test case for customerPrototypeUpdateByIdSites
     *
     * Update a related item by id for sites..
     *
     */
    public function testCustomerPrototypeUpdateByIdSites()
    {
    }

    /**
     * Test case for customerPrototypeUpdateByIdSubscriptions
     *
     * Update a related item by id for subscriptions..
     *
     */
    public function testCustomerPrototypeUpdateByIdSubscriptions()
    {
    }

    /**
     * Test case for customerReplaceByIdPostCustomersidReplace
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomerReplaceByIdPostCustomersidReplace()
    {
    }

    /**
     * Test case for customerReplaceByIdPutCustomersid
     *
     * Replace attributes for a model instance and persist it into the data source..
     *
     */
    public function testCustomerReplaceByIdPutCustomersid()
    {
    }

    /**
     * Test case for customerReplaceOrCreatePostCustomersReplaceOrCreate
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomerReplaceOrCreatePostCustomersReplaceOrCreate()
    {
    }

    /**
     * Test case for customerReplaceOrCreatePutCustomers
     *
     * Replace an existing model instance or insert a new one into the data source..
     *
     */
    public function testCustomerReplaceOrCreatePutCustomers()
    {
    }

    /**
     * Test case for customerResetPassword
     *
     * Reset password for a user with email..
     *
     */
    public function testCustomerResetPassword()
    {
    }

    /**
     * Test case for customerUpdateAll
     *
     * Update instances of the model matched by {{where}} from the data source..
     *
     */
    public function testCustomerUpdateAll()
    {
    }

    /**
     * Test case for customerUpsertWithWhere
     *
     * Update an existing model instance or insert a new one into the data source based on the where criteria..
     *
     */
    public function testCustomerUpsertWithWhere()
    {
    }
}
